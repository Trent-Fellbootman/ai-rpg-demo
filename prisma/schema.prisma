// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// The below data models were generated by OpenAI o1 and finetuned by Trent Fellbootman

model User {
  id                Int                @id @default(autoincrement())
  name              String?
  email             String             @unique
  hashedPassword    String
  gameSessions      GameSession[]
  gameTemplates     GameTemplate[]
  gameTemplateLikes GameTemplateLike[]
  comments          Comment[]
}

model GameSession {
  id                 Int       @id @default(autoincrement())
  name               String
  backstory          String
  description        String?
  imagePath          String
  imageUrl           String?
  imageUrlExpiration DateTime?
  imageDescription   String
  creationTimestamp  DateTime  @default(now())
  deleted            Boolean   @default(false)
  deletionTimestamp  DateTime?
  user               User      @relation(fields: [userId], references: [id])
  userId             Int
  scenes             Scene[]
  isLocked           Boolean   @default(false)
}

model Scene {
  id                  Int         @id @default(autoincrement())
  imagePath           String
  imageUrl            String?
  imageUrlExpiration  DateTime?
  imageDescription    String
  narration           String
  action              String?
  orderInSession      Int
  generationTimestamp DateTime    @default(now())
  deleted             Boolean     @default(false)
  deletionTimestamp   DateTime?
  actionTimestamp     DateTime?
  gameSession         GameSession @relation(fields: [gameSessionId], references: [id])
  gameSessionId       Int
}

model GameTemplate {
  id                 Int                @id @default(autoincrement())
  name               String
  backstory          String
  description        String?
  imagePath          String
  imageDescription   String
  imageUrl           String?
  imageUrlExpiration DateTime?
  creationTimestamp  DateTime           @default(now())
  deleted            Boolean            @default(false)
  deletionTimestamp  DateTime?
  isPublic           Boolean            @default(false)
  user               User               @relation(fields: [userId], references: [id])
  userId             Int
  likes              GameTemplateLike[]
  comments           Comment[]
}

model GameTemplateLike {
  id                Int          @id @default(autoincrement())
  user              User         @relation(fields: [userId], references: [id])
  userId            Int
  gameTemplate      GameTemplate @relation(fields: [gameTemplateId], references: [id])
  gameTemplateId    Int
  createdAt         DateTime     @default(now())
  deleted           Boolean      @default(false)
  deletionTimestamp DateTime?

  @@unique([userId, gameTemplateId])
}

model Comment {
  id                Int          @id @default(autoincrement())
  text              String
  createdAt         DateTime     @default(now())
  deleted           Boolean      @default(false)
  deletionTimestamp DateTime?
  user              User         @relation(fields: [userId], references: [id])
  userId            Int
  gameTemplate      GameTemplate @relation(fields: [gameTemplateId], references: [id])
  gameTemplateId    Int
}
